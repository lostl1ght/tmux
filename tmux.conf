# --------=== Vim style tmux config
set -g status-position top
set -g history-limit 20000

# --------=== Terminal settings
set -sg escape-time 10
set -g focus-events on
set -g default-terminal tmux-256color
# set -g default-shell /usr/bin/zsh
set -ag terminal-features ",alacritty:RGB,alacritty:usstyle,xterm-256color:RGB,wezterm:RGB"
set -s copy-command 'xsel --nodetach --input --clipboard'

# --------=== Window title
set -g set-titles on
# Default: "#S:#I:#W - \"#T\""
set -g set-titles-string "[#H] #W: #T"

# --------=== Easy config reload
bind-key R source-file $HOME/.config/tmux/tmux.conf \; display-message "tmux.conf reloaded"

# --------=== Vi is good
set -g mode-keys vi

# --------=== Mouse behavior
set -g mouse on

# --------=== Prefix C-a
unbind-key C-a
set -g prefix C-a
set -g base-index 1

# --------=== Keybindings
unbind-key -T prefix x
unbind-key -T prefix &
unbind-key -T prefix %
unbind-key -T prefix \"
unbind-key -T prefix o

bind-key : command-prompt
bind-key r refresh-client
bind-key L clear-history

bind-key space next-window
bind-key bspace previous-window
bind-key enter next-layout

bind-key v split-window -h -c "#{pane_current_path}"
bind-key s split-window -v -c "#{pane_current_path}"
bind-key h select-pane -L
bind-key j select-pane -D
bind-key k select-pane -U
bind-key l select-pane -R

bind-key C-o rotate-window

bind-key + select-layout main-horizontal
bind-key = select-layout main-vertical

bind-key a last-pane
bind-key C-a last-window
bind-key c confirm-before -p "kill pane #P? (y/n)" kill-pane
bind-key o confirm-before -p "kill all other panes? (y/n)" 'kill-pane -a -t "#P"'
bind-key O confirm-before -p "kill all other windows? (y/n)" 'kill-window -a -t "#I"'
bind-key e new-window -c "#{pane_current_path}"
bind-key E confirm-before -p "kill window #I? (y/n)" kill-window

bind-key [ copy-mode
bind-key ] paste-buffer

bind-key w choose-tree -Zs
bind-key W choose-tree -Zw

# --------=== Neovim-Tmux navigation
# See tmux.nvim
%hidden tmx_is_vim="ps -o state= -o comm= -t '#{pane_tty}' | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?\.?(view|n?vim?x?)(-wrapped)?(diff)?$'"

bind-key -n 'C-h' if-shell "$tmx_is_vim" 'send-keys C-h' 'select-pane -L'
bind-key -n 'C-j' if-shell "$tmx_is_vim" 'send-keys C-j' 'select-pane -D'
bind-key -n 'C-k' if-shell "$tmx_is_vim" 'send-keys C-k' 'select-pane -U'
bind-key -n 'C-l' if-shell "$tmx_is_vim" 'send-keys C-l' 'select-pane -R'

bind-key -T copy-mode-vi 'C-h' select-pane -L
bind-key -T copy-mode-vi 'C-j' select-pane -D
bind-key -T copy-mode-vi 'C-k' select-pane -U
bind-key -T copy-mode-vi 'C-l' select-pane -R

# --------=== Neovim-Tmux resizing
# See tmux.nvim
bind -n 'M-C-h' if-shell "$tmx_is_vim" 'send-keys M-C-h' 'resize-pane -L 3'
bind -n 'M-C-j' if-shell "$tmx_is_vim" 'send-keys M-C-j' 'resize-pane -D 3'
bind -n 'M-C-k' if-shell "$tmx_is_vim" 'send-keys M-C-k' 'resize-pane -U 3'
bind -n 'M-C-l' if-shell "$tmx_is_vim" 'send-keys M-C-l' 'resize-pane -R 3'

bind-key -T copy-mode-vi M-C-h resize-pane -L 3
bind-key -T copy-mode-vi M-C-j resize-pane -D 3
bind-key -T copy-mode-vi M-C-k resize-pane -U 3
bind-key -T copy-mode-vi M-C-l resize-pane -R 3

# --------=== Size and stuff
set-window-option -g other-pane-height 50%
set-window-option -g other-pane-width 50%
set-window-option -g display-panes-time 1500

# --------=== Setup 'v' to begin selection as in Vim
bind-key -T copy-mode-vi v send -X begin-selection
bind-key -T copy-mode-vi y send -X copy-pipe-and-cancel "reattach-to-user-namespace pbcopy"

# --------=== Update default binding of `Enter` to also use copy-pipe
unbind -T copy-mode-vi Enter
bind-key -T copy-mode-vi Enter send -X copy-pipe-and-cancel "reattach-to-user-namespace pbcopy"

# --------=== Set window notifications
setw -g monitor-activity on
set -g visual-activity on

# --------=== Allow the arrow key to be used immediately after changing windows
set-option -g repeat-time 0

# --------=== Statusline
%hidden tmx_theme="kanagawa"

set -g @thm_bg 'default'

%if "#{==:#{tmx_theme},"kanagawa"}"
set -g @thm_fg '#dcd7ba'
set -g @thm_black '#16161d'
set -g @thm_overlay '#2a2a37'
set -g @thm_muted '#363646'
set -g @thm_sublte '#54546d'
set -g @thm_cyan '#7aa89f'
set -g @thm_pink '#d27e99'
set -g @thm_red '#e46876'
set -g @thm_green '#76946a'
set -g @thm_yellow '#dca561'
set -g @thm_blue '#7e9cd8'
set -g @thm_orange '#ffa066'
%elif "#{==:#{tmx_theme},"rose-pine"}"
set -g @thm_fg '#e0def4'
set -g @thm_black '#191724'
set -g @thm_overlay '#26233a'
set -g @thm_muted '#403d52'
set -g @thm_sublte '#524f67'
set -g @thm_cyan '#9ccfd8'
set -g @thm_pink '#c4a7e7'
set -g @thm_red '#eb6f92'
set -g @thm_green '#31748f'
set -g @thm_yellow '#f6c177'
set -g @thm_blue '#8caaee'
set -g @thm_orange '#ebbcba'
%else
display-message 'WRONG THEME NAME'
set -g @thm_fg 'white'
set -g @thm_black 'black'
set -g @thm_overlay 'black'
set -g @thm_muted 'black'
set -g @thm_sublte '#black'
set -g @thm_cyan 'cyan'
set -g @thm_pink 'magenta'
set -g @thm_red 'red'
set -g @thm_green 'green'
set -g @thm_yellow 'yellow'
set -g @thm_blue 'blue'
set -g @thm_orange 'yellow'
%endif

# set -g @left_separator ''
set -g @left_separator '█'
# set -g @right_separator ''
set -g @right_separator '█'

set -g status on
set -g status-style 'bg=#{@thm_bg} fg=#{@thm_fg}'
set -g status-justify left
set -g status-left-length 100
set -g status-right-length 100

set -g message-style 'fg=#{@thm_fg},bg=#{@thm_overlay},align=centre'
set -g message-command-style 'fg=#{@thm_fg},bg=#{@thm_overlay},align=centre'

set -g pane-border-style 'fg=#{@thm_overlay}'
set -g pane-active-border-style 'fg=#{@thm_orange}'

set -gw window-status-activity-style 'fg=#{@thm_fg},bg=#{@thm_bg},none'
set -gw window-status-separator ''
set -gw window-status-style 'fg=#{@thm_fg},bg=#{@thm_bg},none'

set -g status-left ''
set -g status-right '#[fg=#{@thm_sublte}]#[bg=#{@thm_bg}]#{@right_separator}#[bg=#{@thm_sublte}]#[fg=#{@thm_fg}] #[fg=#{@thm_fg},bg=#{@thm_overlay}] #S #{?client_prefix,#[fg=#{@thm_red}],#[fg=#{@thm_green}]}#[bg=#{@thm_overlay}]#{@right_separator}#{?client_prefix,#[bg=#{@thm_red}],#[bg=#{@thm_green}]}#[fg=#{@thm_black}]󰇧 #[fg=#{@thm_fg},bg=#{@thm_overlay}] #H '

set -gw window-status-format '#[fg=#{@thm_fg},bg=#{@thm_muted}] #I#[fg=#{@thm_muted},bg=#{@thm_bg}]#{@left_separator}#[fg=#{@thm_fg},bg=#{@thm_bg}] #W: #{?#{==:#{pane_current_path},#{HOME}},~,#{s|(/[\.\-_]*\w)[0-9A-Za-z _\.\-]*|\1:#{s|^#{HOME}|~:#{d:pane_current_path}}}#{?#{==:#{d:pane_current_path},/},,/}#{?#{==:#{pane_current_path},/},,#{b:pane_current_path}}} #F #[fg=#{@thm_fg},bg=#{@thm_bg}] '

set -gw window-status-current-format '#[fg=#{@thm_black},bg=#{@thm_yellow}] #I#[fg=#{@thm_yellow},bg=#{@thm_overlay}]#{@left_separator}#[fg=#{@thm_fg},bg=#{@thm_overlay}] #W: #{?#{==:#{pane_current_path},#{HOME}},~,#{s|(/[\.\-_]*\w)[0-9A-Za-z _\.\-]*|\1:#{s|^#{HOME}|~:#{d:pane_current_path}}}#{?#{==:#{d:pane_current_path},/},,/}#{?#{==:#{pane_current_path},/},,#{b:pane_current_path}}} #F #[fg=#{@thm_fg},bg=#{@thm_bg}] '

set -gw mode-style 'fg=#{@thm_cyan} bg=#{@thm_muted}'

# --------===  Scrolling
# Emulate scrolling by sending up and down keys
# if these commands are running in the pane
set -g @tmx_commands 'bat man less git'

bind-key -T root WheelUpPane \
    if-shell -Ft= '#{?mouse_any_flag,1,#{pane_in_mode}}' \
        'send -Mt=' \
        'if-shell -t= "#{?alternate_on,true,false} || echo \"#{@tmx_commands}\" | grep -q \"#{pane_current_command}\"" \
            "send -t= Up Up Up" "copy-mode -et="'

bind-key -T root WheelDownPane \
    if-shell -Ft= '#{?pane_in_mode,1,#{mouse_any_flag}}' \
        'send -Mt=' \
        'if-shell -t= "#{?alternate_on,true,false} || echo \"#{@tmx_commands}\" | grep -q \"#{pane_current_command}\"" \
            "send -t= Down Down Down" "send -Mt="'
